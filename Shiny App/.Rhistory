mainPanel(
#column(8, plotlyOutput("plot1", width = 800, height=700)
#column(8,DT::dataTableOutput('table_example')
column(8,DT::dataTableOutput('players_table')
)
)
)),
tabPanel("About",p("We used a data set consisting of 39 attributes from 11,158 players registered
in Pro Evolution Soccer 2019 (PES 2019), an electronic soccer game. The data set
was obtained from ", a("PES Data Base", href="http://pesdb.net/", target="_blank"),
"website using web scraping. This app is an interactive tool that allows any user to choose a soccer player from the game
and find the ten players most similar whith him. The similarity between the players is determined using a data mining technique
called", a("k-nearest neighbors", href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm", target="_blank"), ".",style = "font-size:25px"),
hr(),
p("The available player positions are:",style = "font-size:25px"),
p("GK: Goalkeeper",style = "font-size:15px;color: blue"),
p("CB: Center Back",style = "font-size:15px;color: blue"),
p("RB: Right Back",style = "font-size:15px;color: blue"),
p("LB: Left Back",style = "font-size:15px;color: blue"),
p("DMF: Defense Midfield",style = "font-size:15px;color: blue"),
p("CMF: Center Midfield",style = "font-size:15px;color: blue"),
p("AMF: Attacking Midfield",style = "font-size:15px;color: blue"),
p("RMF: Right Midfield",style = "font-size:15px;color: blue"),
p("LMF: Left Midfield",style = "font-size:15px;color: blue"),
p("RWF: Right Wing Forward",style = "font-size:15px;color: blue"),
p("LWF: Left Wing Forward",style = "font-size:15px;color: blue"),
p("SS: Second Striker",style = "font-size:15px;color: blue"),
p("CF: Counter Forward",style = "font-size:15px;color: blue"),
hr(),
p("The abbreviations used in the radar chart are:",style = "font-size:25px"),
p("BAL: Unwavering Balance",style = "font-size:15px;color: blue"),
p("STM: Stamina",style = "font-size:15px;color: blue"),
p("SPE: Speed",style = "font-size:15px;color: blue"),
p("EXP: Explosive Power",style = "font-size:15px;color: blue"),
p("ATT: Attacking Prowess",style = "font-size:15px;color: blue"),
p("BCO: Ball Control",style = "font-size:15px;color: blue"),
p("DRI: Dribbling",style = "font-size:15px;color: blue"),
p("LPAS: Low Pass",style = "font-size:15px;color: blue"),
p("APAS: Air Pass (Lofted Pass)",style = "font-size:15px;color: blue"),
p("KPOW: Kicking Power",style = "font-size:15px;color: blue"),
p("FIN: Finishing",style = "font-size:15px;color: blue"),
p("PKIC: Place Kicking",style = "font-size:15px;color: blue"),
p("SWE: Swerve",style = "font-size:15px;color: blue"),
p("HEA: Header",style = "font-size:15px;color: blue"),
p("JUM: Jump",style = "font-size:15px;color: blue"),
p("PHY: Physical Contact",style = "font-size:15px;color: blue"),
p("BWIN: Ball Winning",style = "font-size:15px;color: blue"),
p("DEF: Defensive Prowess",style = "font-size:15px;color: blue"),
p("GOA: Goalkeeping",style = "font-size:15px;color: blue"),
p("GKC: GK Catch",style = "font-size:15px;color: blue"),
p("CLE: Clearing",style = "font-size:15px;color: blue"),
p("REF: Reflexes",style = "font-size:15px;color: blue"),
p("COV: Coverage",style = "font-size:15px;color: blue")),
tabPanel("Developers",
p(a("Jake Barrett", href="http://twitter.com", target="_blank"),style = "font-size:25px"),
p("e-mail: jbarrett2601@gmail.com",style = "font-size:20px"))#,
#p(a("Julio Cesar Soares", href="http://buscatextual.cnpq.br/buscatextual/visualizacv.do?id=K4417495Y5", target="_blank"),style = "font-size:25px"),
#p("email: soares.julio@gmail.com",style = "font-size:20px"),
)
runApp()
runApp()
runApp()
summary(daya)
summary(dataa)
summary(data)
summary(player_data)
summary(factor(player_data$position))
runApp()
player_data %>%
filter(player_data$League %in% input$league)# &
runApp()
runApp()
runApp()
runApp()
library(shinyWidgets)
library("shinyWidgets")
install.packages("shinyWidgets")
library("shinyWidgets")
navbarPage("Player Folk Index",
tabPanel("Graphic",fluidPage(theme = shinytheme("flatly")),
tags$head(
tags$style(HTML(".shiny-output-error-validation{color: red;}"))),
pageWithSidebar(
headerPanel('Apply filters'),
sidebarPanel(width = 4,
pickerInput("league","League:", sort(player_data$League), options = list(`actions-box` = TRUE),multiple = T)
#selectInput('league', "League:",sort(player_data$League)),
selectInput('team', "Team:",sort(player_data$Team)),
selectInput('nationality', "Nationality:",sort(player_data$primary_nationality)),
checkboxGroupInput(inputId = "position",
label = 'Position:', choices = c("Goalkeeper" = "Goalkeeper", "Left-Back" = "Left-Back",
"Centre-Back"="Centre-Back","Right-Back"="Right-Back",
"Defensive Midfield"="Defensive Midfield",
"Left Midfield"="Left Midfield","Central Midfield"="Central Midfield",
"Right Midfield"="Right Midfield","Attacking Midfield"="Attacking Midfield",
"Left Winger"="Left Winger","Right Winger"="Right Winger",
"Second Striker"="Second Striker","Centre-Forward"="Centre-Forward"),
selected = c("Centre-Forward"="Centre-Forward"),inline=TRUE),
submitButton("Update filters")
),
mainPanel(
#column(8, plotlyOutput("plot1", width = 800, height=700)
#column(8,DT::dataTableOutput('table_example')
column(8,DT::dataTableOutput('players_table')
)
)
)),
tabPanel("About",p("Update explanation code: 1) explain the methodology, 2) explain data sources e.g.
why those positions"), ".",style = "font-size:25px"),
hr(),
p("The available leagues are:",style = "font-size:25px"),
p("SPL: Scottish Premier League (last updated xxxx)",style = "font-size:15px;color: blue"),
p("BPL: Barclays Premier League (last updated: xxxx)",style = "font-size:15px;color: blue"),
hr(),
# p("The abbreviations used in the radar chart are:",style = "font-size:25px"),
#
# p("BAL: Unwavering Balance",style = "font-size:15px;color: blue"),
# p("STM: Stamina",style = "font-size:15px;color: blue"),
tabPanel("Developers",
p(a("Jake Barrett", href="http://twitter.com", target="_blank"),style = "font-size:25px"),
p("e-mail: jbarrett2601@gmail.com",style = "font-size:20px"))#,
#p(a("Julio Cesar Soares", href="http://buscatextual.cnpq.br/buscatextual/visualizacv.do?id=K4417495Y5", target="_blank"),style = "font-size:25px"),
#p("email: soares.julio@gmail.com",style = "font-size:20px"),
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a <- datatable(player_data %>% select("Player","Team","League","primary_nationality","current_value","PFI"))
head(a)
a
formatStyle(a,'current_value')
formatStyle(a,'current_value',"£")
formatCurrency(a, "current_value", '\U20AC', digits = 1)
formatCurrency(a, "current_value", '\U00A3', digits = 1)
runApp()
player_data %>%
filter(player_data$League %in% input$league &
player_data$position %in% input$position &
player_data$Team %in% input$team  &
player_data$primary_nationality %in% input$nationality) %>%
select("Player","Team","League","primary_nationality","current_value","PFI") %>%
rename(primary_nationality = "Nationality", current_value = "Value (£)")
runApp()
player_data %>%
select("Player","Team","League","primary_nationality","current_value","PFI") %>%
rename(primary_nationality = "Nationality", current_value = "Value (£)")
player_data %>%
select("Player","Team","League","primary_nationality","current_value","PFI") %>%
rename(primary_nationality = Nationality, current_value = "Value (£)")
player_data %>%
select("Player","Team","League","primary_nationality","current_value","PFI") %>%
rename(Nationality = primary_nationality, current_value = "Value (£)")
player_data %>%
select("Player","Team","League","primary_nationality","current_value","PFI") %>%
rename(Nationality = primary_nationality, "Value (£)" = current_value)
runApp()
runApp()
player_data %>%
filter(player_data$League %in% input$league &
player_data$position %in% input$position &
player_data$Team %in% input$team  &
player_data$primary_nationality %in% input$nationality) %>%
mutate(current_value = round(current_value/1000000,4)) %>%
select("Player","Team","League","primary_nationality","current_value","PFI") %>%
rename(Nationality = primary_nationality, "Value (\£mil)" = current_value)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
range(table_data$PFI)
range(table_data())
table_data
runApp()
runApp()
runApp()
runApp()
head(player_data)
player_data <- read.csv("EPL_PFI_data_20220110.csv")
View(player_data)
View(player_data)
runApp()
player_data %>% filter(League=="EPL")
player_data %>% filter(League=="EPL") %>% select(date_mined_social)
player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% max()
player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise(max)
player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise(max())
max(player_data %>% filter(League=="EPL") %>% select(date_mined_social))
player_data %>% filter(League=="EPL") %>% select(date_mined_social)
class(player_data$date_mined_social)
as.Date((player_data$date_mined_social))
head(player_data$date_mined_social)
strptime(player_data$date_mined_social,format = "%d/$m/%Y %H:%M")
head(player_data$date_mined_social)
strptime(player_data$date_mined_social,format = "%d/%m/%Y %H:%M")
player_data$date_mined_social = strptime(player_data$date_mined_social,format = "%d/%m/%Y %H:%M")
max(player_data %>% filter(League=="EPL") %>% select(date_mined_social))
head(player_data$date_mined_social)
class(player_data$date_mined_social)
player_data$date_mined_social = format(strptime(player_data$date_mined_social,format = "%d/%m/%Y %H:%M"),format='%d/%m/%Y'
)
player_data$date_mined_social
player_data <- read.csv("EPL_PFI_data_20220110.csv")
player_data$PFI <- round(player_data$PFI,1)
player_data <- player_data %>% select("Player","position","primary_nationality","Team","League","current_value","max_reach","PFI","date_mined_social")
# updated dates
player_data$date_mined_social = format(strptime(player_data$date_mined_social,format = "%d/%m/%Y %H:%M"),format='%d/%m/%Y')
player_data$date_mined_social
class(player_data$date_mined_social)
player_data <- read.csv("EPL_PFI_data_20220110.csv")
player_data$PFI <- round(player_data$PFI,1)
player_data <- player_data %>% select("Player","position","primary_nationality","Team","League","current_value","max_reach","PFI","date_mined_social")
# updated dates
player_data$date_mined_social = strptime(player_data$date_mined_social,format = "%d/%m/%Y %H:%M")
player_data$date_mined_social
max(player_data$date_mined_social)
max(player_data %>% filter(League=="EPL") %>% select(date_mined_social))
player_data %>% filter(League=="EPL") %>% select(date_mined_social)
player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise_all(max)
a = player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise_all(max)
paste0("date = ",a)
paste0("date = ",format(a,format='%d/%m/%Y'))
BPL_latest = format(player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise_all(max),,format='%d/%m/%Y')
BPL_latest
paste0("data = ",a)
paste0("data = ",BPL_latest)
SPL_latest = format(player_data %>% filter(League=="SPL") %>% select(date_mined_social) %>% summarise_all(max),format='%d/%m/%Y')
BPL_latest = format(player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise_all(max),format='%d/%m/%Y')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a = player_datamutate(current_value = round(current_value/1000000,2),
max_reach = round(max_reach/1000000,2)) %>%
select("Player","Team","League","primary_nationality","max_reach","current_value","PFI") %>%
rename(Nationality = primary_nationality, "Reach (millions)" = max_reach, "Value (millions)" = current_value)
a = player_data %>% mutate(current_value = round(current_value/1000000,2),
max_reach = round(max_reach/1000000,2)) %>%
select("Player","Team","League","primary_nationality","max_reach","current_value","PFI") %>%
rename(Nationality = primary_nationality, "Reach (millions)" = max_reach, "Value (millions)" = current_value)
a
a %>% group_by("League") %>%
aggregate("Average Reach (millions)"=avg(`Reach (millions)`),"Average Value (millions)"=avg(`Value (millions`),"Average PFI"=avg(PFI))
a %>% group_by("League") %>%
aggregate("Average Reach (millions)"=avg(`Reach (millions)`))
a %>% group_by("League") %>%
aggregate("Average Reach (millions)"=sum(`Reach (millions)`))
a %>% group_by("League") %>%
aggregate(sum)
a %>% group_by("League") %>%
summarise(across(everything(),sum))
a
head(a)
a %>% group_by("League") %>%
summarise(across(where(is.numeric),sum))
a %>% group_by("League") %>%
summarise(across(where(is.numeric),avg))
a %>% group_by("League") %>%
summarise(across(where(is.numeric),mean))
1050/8154
1.60/27
2.04/15.9
a
head(a)
a %>% group_by(League) %>%
summarise(across(where(is.numeric),mean))
a %>% order_by(PFI)
a %>% arrange(PFI)
a %>% arrange(desc(PFI))
a %>% group_by(League) %>%
summarise(across(where(is.numeric),mean)) %>%
rename("Average Reach (millions)" = max_reach, "Average Value (millions)" = current_value, "Average PFI" = PFI)
head(a)
a = player_data
head(a)
a %>% mutate(current_value = round(current_value/1000000,2),
max_reach = round(max_reach/1000000,2)) %>%
select("Player","Team","League","primary_nationality","max_reach","current_value","PFI") %>%
group_by(League) %>%
summarise(across(where(is.numeric),mean)) %>%
rename("Average Reach (millions)" = max_reach, "Average Value (millions)" = current_value, "Average PFI" = PFI)
a %>% mutate(current_value = round(current_value/1000000,2),
max_reach = round(max_reach/1000000,2)) %>%
select("Player","Team","League","primary_nationality","max_reach","current_value","PFI") %>%
group_by(League) %>%
summarise(across(where(is.numeric),mean)) %>%
rename("Average Reach (millions)" = max_reach, "Average Value (millions)" = current_value, "Average PFI" = PFI) -> b
b
plot_ly(b,x= ~League, y= ~`Average PFI`)
x <- c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December')
y1 <- c(20, 14, 25, 16, 18, 22, 19, 15, 12, 16, 14, 17)/10
y2 <- c(19, 14, 22, 14, 16, 19, 15, 14, 10, 12, 12, 16)
data <- data.frame(x, y1, y2)
data$x <- factor(data$x, levels = data[["x"]])
ay <- list(
overlaying = "y",
side = "right",
title = "Right Hand Axis"
)
p <- plot_ly() %>%
add_bars(data, x = ~x, y = ~y1, name = 'Primary Product (LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1) %>%
add_bars(data, x = ~x, y = ~y2, name = 'Secondary Product (RHS)',
marker = list(color = 'rgb(204,204,204)'), yaxis = "y2", offsetgroup = 2) %>%
layout(yaxis2 = ay,
xaxis = list(title = "Time Period", tickangle = -45),
yaxis = list(title = "Left Hand Axis"),
margin = list(b = 100),
barmode = 'group',
legend = list(x = 1.1, y = 1))
p
data
b
p <- plot_ly() %>%
add_bars(b, x = ~League, y = ~`Average Reach (millions)`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1) %>%
add_bars(b, x = ~League, y = ~`Average Value (millions)`, name = 'Average Value (millions, RHS)',
marker = list(color = 'rgb(204,204,204)'), yaxis = "y2", offsetgroup = 2) %>%
layout(yaxis2 = ay,
xaxis = list(title = "Time Period", tickangle = -45),
yaxis = list(title = "Left Hand Axis"),
margin = list(b = 100),
barmode = 'group',
legend = list(x = 1.1, y = 1))
p
p <- plot_ly() %>%
add_bars(b, x = ~League, y = ~`Average Reach (millions)`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1) %>%
add_bars(b, x = ~League, y = ~`Average Value (millions)`, name = 'Average Value (millions, RHS)',
marker = list(color = 'rgb(204,204,204)'), yaxis = "y2", offsetgroup = 2)
p
b
plot_ly() %>%
add_bars(b, x = ~League, y = ~`Average Reach (millions)`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
p <- plot_ly() %>%
add_bars(b,x= ~League, y = ~`Average Reach (millions)`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
p
colnames(b)
colnames(b)[1]
colnames(b)[1]=="League"
plot_ly() %>%
add_bars(b,x= ~`League`, y = ~`Average Reach (millions)`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
plot_ly()
plot_ly() %>%
add_bars(b,x= ~League, y = ~`Average Reach (millions)`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
plot_ly() %>%
add_bars(b,x= ~League, y = ~`Average PFI`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
b$x
b$League
class(b$League)
b$League <- factor(b$League, levels = b[["League"]])
plot_ly() %>%
add_bars(b,x= ~League, y = ~`Average PFI`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
player_data <- rbind(read.csv("EPL_PFI_data_20220110.csv"),read.csv("SPL_PFI_data_20220104.csv"))
player_data$PFI <- round(player_data$PFI,1)
player_data <- player_data %>% select("Player","position","primary_nationality","Team","League","current_value","max_reach","PFI","date_mined_social")
# updated dates
player_data$date_mined_social = strptime(player_data$date_mined_social,format = "%d/%m/%Y %H:%M")
BPL_latest = format(player_data %>% filter(League=="EPL") %>% select(date_mined_social) %>% summarise_all(max),format='%d/%m/%Y')
SPL_latest = format(player_data %>% filter(League=="SPL") %>% select(date_mined_social) %>% summarise_all(max),format='%d/%m/%Y')
b = player_data %>% mutate(current_value = round(current_value/1000000,2),
max_reach = round(max_reach/1000000,2)) %>%
select("Player","Team","League","primary_nationality","max_reach","current_value","PFI") %>%
group_by(League) %>%
summarise(across(where(is.numeric),mean)) %>%
rename("Average Reach (millions)" = max_reach, "Average Value (millions)" = current_value, "Average PFI" = PFI)
b
summary(player_data$PFI)
View(player_data)
b = player_data %>% filter(current_value!=0) %>% mutate(current_value = round(current_value/1000000,2),
max_reach = round(max_reach/1000000,2)) %>%
select("Player","Team","League","primary_nationality","max_reach","current_value","PFI") %>%
group_by(League) %>%
summarise(across(where(is.numeric),mean)) %>%
rename("Average Reach (millions)" = max_reach, "Average Value (millions)" = current_value, "Average PFI" = PFI)
b
plot_ly(b,x= ~League, y= ~`Average PFI`)
plot_ly() %>%
add_bars(b,x= ~League, y = ~`Average PFI`, name = 'Average Reach (millions, LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
p <- plot_ly()
p
p <- plot_ly() %>%
add_bars(b, x = ~League, y = ~`Average PFI`, name = 'Primary Product', marker = list(color = 'rgb(49,130,189)'))
p
fig <- plot_ly()
fig <- fig %>% add_trace(x = ~b$League, y = ~b$`Average PFI`, name = "yaxis data", mode = "lines+markers", type = "scatter")
fig
plot_ly() %>%
add_bars(x = ~b$League, y = ~b$`Average PFI`, name = 'Primary Product (LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1)
p <- plot_ly() %>%
add_bars(x = ~b$League, y = ~b$`Average PFI`, name = 'Primary Product (LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1) %>%
add_bars(data, x = ~b$League, y = ~b$`Average Reach (millions)`, name = 'Secondary Product (RHS)',
marker = list(color = 'rgb(204,204,204)'), yaxis = "y2", offsetgroup = 2) %>%
layout(yaxis2 = ay,
xaxis = list(title = "Time Period", tickangle = -45),
yaxis = list(title = "Left Hand Axis"),
margin = list(b = 100),
barmode = 'group',
legend = list(x = 1.1, y = 1))
p
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
b
player_data
runApp()
runApp()
runApp()
runApp()
player_data %>% group_by(League) %>% summarise(n())
player_data %>% group_by(League) %>% summarise(ct=n())
player_data %>% group_by(League) %>% summarise(ct=n(),def=sum(current_value!=0))
player_data %>% group_by(League) %>% summarise(ct=n(),missing=sum(current_value==0))
player_data %>% group_by(League) %>% summarise(ct=n(),missing=sum(current_value==0 | reach==0))
head(player_data)
player_data %>% group_by(League) %>% summarise(ct=n(),missing=sum(current_value==0 | max_reach==0))
player_data %>% group_by(League) %>% summarise(ct=n(),no_val=sum(current_value==0),no_social=sum(max_reach==0),total_missing=sum(current_value==0 | max_reach==0))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot_ly() %>%
add_bars(x = ~league_data()$League, y = ~league_data()$`Average PFI`, name = 'Average PFI (LHS)',
marker = list(color = 'rgb(49,130,189)'), offsetgroup = 1) %>%
add_bars(data, x = ~league_data()$League, y = ~league_data()$`Average Reach (millions)`, name = 'Average Reach (millions, RHS)',
marker = list(color = 'rgb(82,64,124)'), yaxis = "y2", offsetgroup = 2) %>%
add_bars(data, x = ~league_data()$League, y = ~league_data()$`Average Value (millions)`, name = 'Average Value (millions, RHS)',
marker = list(color = 'rgb(204,204,204)'), yaxis = "y2", offsetgroup = 3) %>%
layout(title = "<b>Average PFI Across Selected Leagues\<b>",
yaxis2 = ay,
xaxis = list(title = "League", tickangle = -45),
yaxis = list(title = "PFI (followers/1000)"),
margin = list(b = 100),
barmode = 'group',
legend = list(x = 1.1, y = 1))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?p
?a
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
